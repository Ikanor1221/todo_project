(()=>{"use strict";new Intl.DateTimeFormat("en-GB",{});const e=new Intl.DateTimeFormat("en-GB",{});new Intl.DateTimeFormat("en-GB",{});let t=function(e,t){const n=document.querySelector("#tasks");function r(e){n.innerHTML="";for(let r in e)n.innerHTML+=t.generateTaskElement(e[r],e[r].id);for(let t in e)i(e[t].id);l()}function a(n){if(document.querySelector("#newProjectForm"))return;let a=document.createRange().createContextualFragment(t.generateProjectForm(n));document.querySelector("#projectList").after(a),function(n){const a=document.querySelector("#newProjectForm"),c=document.querySelector("#titleFormProject"),l=document.querySelector("#addProject"),d=document.querySelector("#cancelProject");a.addEventListener("submit",(e=>{e.preventDefault()})),l.addEventListener("click",(a=>{if(Boolean(c.value))if(n)n.title=c.value,o(),s(e.returnProjectsAll()),t.highlight(document.querySelector("#"+e.selectedTab)),e.selectedTab.replace("project","")==n.id&&t.updateMainHeader(n.title);else{e.addProject(c.value),o(),e.selectedTab="#project"+e.returnProjectLast().id,e.selectedProjectId=e.returnProjectLast().id,r(e.returnTasksCurrentTab()),s(e.returnProjectsAll());let n=document.querySelector("#project"+e.returnProjectLast().id);t.highlight(n),t.updateMainHeader(e.returnProjectLast().title)}})),d.addEventListener("click",(e=>{o()}))}(n)}function o(){let e=document.querySelector("#newProjectForm");e.parentNode.removeChild(e)}function c(){const e=document.querySelector("#add_project");let t=document.querySelector("#newProjectForm");e.addEventListener("click",(e=>{t||a()}))}function l(){let r=document.querySelector("#add_task"),a=document.querySelector("#newTaskForm");if("all_tasks_tab"==e.selectedTab||"today_tab"==e.selectedTab||"next_week_tab"==e.selectedTab||"important_tab"==e.selectedTab)r&&r.parentElement.removeChild(r);else if(a);else if(!r){let e=document.createRange().createContextualFragment(t.generateAddTaskButtonElement());n.after(e);let r=document.querySelector("#add_task");r.addEventListener("click",(e=>{d(),r.parentNode.removeChild(r)}))}}function s(e){const n=document.querySelector("#projectList");n.innerHTML="";for(let r in e)n.innerHTML+=t.generateProjectElement(e[r],e[r].id);for(let t in e)u(e[t].id)}function d(a){let o=document.createRange().createContextualFragment(t.generateTaskForm(a));n.after(o),function(t){let n=e.selectedProjectId;const a=document.querySelector("#newTaskForm"),o=document.querySelector("#titleTask"),c=document.querySelector("#descriptionTask"),s=document.querySelector("#dateForm"),d=document.querySelector("#addTask"),i=document.querySelector("#cancelTask");a.addEventListener("submit",(e=>{e.preventDefault()})),d.addEventListener("click",(a=>{Boolean(o.value)&Boolean(s.value)&&(t?(t.title=o.value,t.description=c.value,t.date=new Date(s.value),m()):(e.addTask(o.value,c.value,s.value,!1,n),m()),r(e.returnTasksCurrentTab()))})),i.addEventListener("click",(e=>{m(),l()}))}(a)}function i(t){const n=document.querySelector("#taskMenu"+t);document.querySelector("body").addEventListener("click",(e=>{e.target.closest("#buttonModify"+t)&&n.classList.contains("hidden")?n.classList.remove("hidden"):n.classList.add("hidden")})),document.querySelector("#checkboxFav"+t).addEventListener("change",(n=>{n.currentTarget.checked?e.returnTaskById(t).importance=!0:e.returnTaskById(t).importance=!1}));const a=document.querySelector("#checkboxMain"+t);1==e.returnTaskById(t).completion&&(a.checked=!0,a.parentElement.parentElement.classList.add("taskCompleted")),a.addEventListener("change",(n=>{n.currentTarget.checked?(a.parentElement.parentElement.classList.add("taskCompleted"),e.returnTaskById(t).completion=!0):(a.parentElement.parentElement.classList.remove("taskCompleted"),e.returnTaskById(t).completion=!1)})),document.querySelector("#buttonDelete"+t).addEventListener("click",(n=>{e.removeTaskByID(t),r(e.returnTasksCurrentTab())})),document.querySelector("#buttonEdit"+t).addEventListener("click",(n=>{d(e.returnTaskById(t))}))}function u(n){const c=document.querySelector("#projectMenu"+n),l=document.querySelector("#project"+n),d=document.querySelector("body"),i=document.querySelector("#deleteProject"+n),u=document.querySelector("#renameProject"+n);d.addEventListener("click",(e=>{e.target.closest("#buttonProjectMenu"+n)&&c.classList.contains("hidden")?c.classList.remove("hidden"):c.classList.add("hidden")})),l.addEventListener("click",(a=>{t.highlight(l),e.selectedTab=l.id,e.selectedProjectId=n,r(e.returnTasksCurrentTab()),t.updateMainHeader(e.returnProjectById(n).title)})),i.addEventListener("click",(a=>{document.querySelector("#newProjectForm")&&o(),n==e.selectedProjectId?(e.selectedTab="all_tasks_tab",e.selectedProjectId=null,e.removeProjectByID(n),r(e.returnTasksCurrentTab()),s(e.returnProjectsAll()),t.highlight(document.querySelector("#all_tasks_tab"))):(e.removeProjectByID(n),r(e.returnTasksCurrentTab()),s(e.returnProjectsAll()),t.highlight(document.querySelector("#"+e.selectedTab)))})),u.addEventListener("click",(t=>{a(e.returnProjectById(n))}))}function m(){let e=document.querySelector("#newTaskForm");e.parentNode.removeChild(e)}function b(){[document.querySelector("#all_tasks_tab"),document.querySelector("#today_tab"),document.querySelector("#next_week_tab"),document.querySelector("#important_tab")].forEach((n=>{n.addEventListener("click",(a=>{t.highlight(n),e.selectedTab=n.id,r(e.returnTasksCurrentTab()),e.selectedProjectId=null,"all_tasks_tab"==n.id?t.updateMainHeader("All Tasks"):"today_tab"==n.id?t.updateMainHeader("Today"):"next_week_tab"==n.id?t.updateMainHeader("Next Week"):"important_tab"==n.id&&t.updateMainHeader("Important")}))}))}function p(){window.addEventListener("beforeunload",(function(t){localStorage.setItem("tasks",JSON.stringify(e.returnTasksAll())),localStorage.setItem("projects",JSON.stringify(e.returnProjectsAll())),localStorage.setItem("taskId",JSON.stringify(e.taskId)),localStorage.setItem("projectId",JSON.stringify(e.projectId))})),window.addEventListener("beforeupdate",(function(t){localStorage.setItem("tasks",JSON.stringify(e.returnTasksAll())),localStorage.setItem("projects",JSON.stringify(e.returnProjectsAll())),localStorage.setItem("taskId",JSON.stringify(e.taskId)),localStorage.setItem("projectId",JSON.stringify(e.projectId))}))}function k(){const e=document.querySelector("#menu_control"),t=document.querySelector("#menu_main_bar"),n=document.querySelector("#sorting");e.addEventListener("click",(e=>{t.classList.toggle("removed"),n.classList.toggle("grid_auto")}))}return{renderTasks:r,renderProjects:s,initializeTabs:b,renderTaskForm:d,renderProjectForm:a,initializeAddProjectButton:c,populateStorage:function(){e.addProject("Daily Tasks"),e.addProject("Global Tasks"),e.addTask("Wash dishes","Wash all the dishes at your home","2023-03-26",!1,0),e.addTask("Fix Bike","The tire must be changed","2023-03-29",!0,0),e.addTask("Finish the Odin project","The last project is left","2023-09-19",!0,0),e.addTask("Get a job","Get a job as a Web Developer","2023-03-28",!0,1),e.addTask("Build a house","Find a suitable location and for the good price","2030-04-20",!1,1),r(e.returnTasksCurrentTab()),e.addProject("2"),e.addProject("123"),e.addProject("2"),s(e.returnProjectsAll()),b(),c(),localStorage.setItem("tasks",JSON.stringify(e.returnTasksAll())),localStorage.setItem("projects",JSON.stringify(e.returnProjectsAll())),p(),k()},receiveFromStorage:function(){e.setCollectionOfTasks(JSON.parse(localStorage.getItem("tasks"))),e.setCollectionOfProjects(JSON.parse(localStorage.getItem("projects"))),e.taskId=localStorage.getItem("taskId"),e.projectId=localStorage.getItem("projectId"),r(e.returnTasksCurrentTab()),s(e.returnProjectsAll()),b(),c(),p(),k()}}}(function(){const e=[],t=[];let n,r=new Date,a="all_tasks_tab",o=0,c=0;const l=t=>e.find((e=>e.id==t)),s=()=>e,d=t=>{let n=e.find((e=>e.id==t));e.splice(e.indexOf(n),1)};return{addTask:(t,n,r,a,c)=>{let l=function(e,t,n,r,a,o){return{title:e,description:t,date:new Date(n),importance:r,projectId:a,id:o,completion:!1}}(t,n,r,a,c,o);o++,e.push(l),e.sort(((e,t)=>e.date-t.date))},addProject:e=>{if(!t.find((t=>t.title==e))){let n={title:e,id:c};c++,t.push(n)}},returnTasksAll:s,returnProjectsAll:()=>t,returnTaskById:l,returnProjectById:e=>t.find((t=>t.id==e)),removeTaskByID:d,removeProjectByID:n=>{for(let t=0;t<e.length;t++)e[t].projectId==n&&(d(e[t].id),t--);let r=t.find((e=>e.id==n));t.splice(t.indexOf(r),1)},returnTasksCurrentTab:()=>"all_tasks_tab"==a?s():"today_tab"==a?(()=>{const t=[];for(let n in e)e[n].date.getDate()==r.getDate()&e[n].date.getMonth()==r.getMonth()&e[n].date.getFullYear()==r.getFullYear()&&t.push(e[n]);return t})():"next_week_tab"==a?(()=>{let t=new Date,n=new Date;t.setDate(n.getDate()+7);const r=[];for(let a in e)e[a].date.getTime()<=t.getTime()&e[a].date.getTime()>=n.getTime()&&r.push(e[a]);return r})():"important_tab"==a?(()=>{const t=[];for(let n in e)1==e[n].importance&&t.push(e[n]);return t})():(t=>{const n=[];for(let r in e)e[r].projectId==t&&n.push(e[r]);return n})(n),returnProjectLast:()=>t[t.length-1],editTaskById:(t,n,r,a)=>{let o=l(t);o.title=n,o.description=r,o.date=a,e.sort(((e,t)=>e.date-t.date))},setCollectionOfTasks:t=>{for(let n in t)t[n].date=new Date(t[n].date.replace("T22:00:00.000Z","")),e.push(t[n]);e.sort(((e,t)=>e.date-t.date))},setCollectionOfProjects:e=>{for(let n in e)t.push(e[n])},get selectedTab(){return a},set selectedTab(e){a=e},get selectedProjectId(){return n},set selectedProjectId(e){n=e},get taskId(){return o},set taskId(e){o=new Number(e)},get projectId(){return c},set projectId(e){c=new Number(e)}}}(),{generateTaskElement:function(t,n){const r=t.importance?"checked":"";return`                \n        <div id="task${n}" class="task">\n        <label class="checkbox" for="checkboxMain${n}">\n            <input class="main_checkbox" id="checkboxMain${n}" type="checkbox">\n            <span class="control"></span>\n        </label>\n        <div class="description">\n            <h4>${t.title}</h4>\n            <p>${t.description}</p>\n        </div>\n        <p class="date">${e.format(t.date)}</p>\n        <label class="favorite" for="checkboxFav${n}">\n            <input class="fav_checkbox" id="checkboxFav${n}" type="checkbox" ${r}>\n            <span class="material-icons-outlined"></span>\n        </label>\n        <div class="menuHolder">\n            <button class="modify_button" id="buttonModify${n}">\n                <span class="material-icons-outlined">more_vert</span>\n            </button>\n            <menu class="emergingMenu hidden" id="taskMenu${n}">\n                <li><button id="buttonEdit${n}">Edit</button></li>\n                <li><button id="buttonDelete${n}">Delete</button></li>\n            </menu>\n        </div>\n        </div>\n        `},generateProjectElement:function(e,t){return`                \n        <li>\n        <a id="project${t}" class="groupingTab" href="#"><span class="material-symbols-outlined">launch</span>${e.title}</a>\n        <button id="buttonProjectMenu${t}" class="menu_modify_button"><span class="material-symbols-outlined">more_horiz</span></button>\n        <menu class="emergingMenu moved hidden" id="projectMenu${t}">\n            <li><button id="renameProject${t}">Rename</button></li>\n            <li><button id="deleteProject${t}">Delete</button></li>\n        </menu>\n    </li>\n    `},generateTaskForm:function(e){let t;return t=e?`                \n            <form class="formObject" id="newTaskForm" autocomplete="off">\n                <label class="no_margin" for="titleTask">Title: </label>\n                <input class="basicField" id="titleTask" type="text" value="${e.title}" required>\n                <label for="descriptionTask">Description (optional): </label>\n                <textarea class="wideField" id="descriptionTask">${e.description}</textarea>\n                <label for="dateForm">Date: </label>\n                <input class="basicField" id="dateForm" type="date" value="${e.date.toISOString().substr(0,10)}" required>\n                <div class="formButtons">\n                    <button class="buttonFormAdd" id="addTask">Add</button>\n                   <button class="buttonFormCancel" id="cancelTask">Cancel</button>\n                </div>\n            </form>\n        `:'                \n            <form class="formObject" id="newTaskForm" autocomplete="off">\n                <label class="no_margin" for="titleTask">Title: </label>\n                <input class="basicField" id="titleTask" type="text" value="" required>\n                <label for="descriptionTask">Description (optional): </label>\n                <textarea class="wideField" id="descriptionTask"></textarea>\n                <label for="dateForm">Date: </label>\n                <input class="basicField" id="dateForm" type="date" value="" required>\n                <div class="formButtons">\n                    <button class="buttonFormAdd" id="addTask">Add</button>\n                   <button class="buttonFormCancel" id="cancelTask">Cancel</button>\n                </div>\n            </form>\n        ',t},generateProjectForm:function(e){let t;return t=e?e.title:"",`                \n        <form class="formObject no_padding" id="newProjectForm" autocomplete="off">\n        <label for="titleFormProject">New project's name: </label>\n        <input id="titleFormProject" class="basicField" type="text" value="${t}" required>\n        <div class="formButtons">\n            <button class="buttonFormAdd" id="addProject">Add</button>\n            <button class="buttonFormCancel" id="cancelProject">Cancel</button>\n        </div>\n    </form>\n     `},generateAddTaskButtonElement:function(){return'<button class="addition_button" id="add_task"><span class="material-symbols-outlined">add_circle</span> Add Task</button>'},highlight:function(e){document.querySelectorAll(".groupingTab").forEach((e=>{e.parentElement.classList.remove("selected")})),e.parentElement.classList.add("selected")},updateMainHeader:function(e){document.querySelector("#main_header").innerHTML=e}});localStorage.getItem("projects")?t.receiveFromStorage():t.populateStorage()})();